
TODO: 

- Refactor to modular code files. 
- Handle different forms of neuron data + speed up multi neuron processing 
- Write function specs + documentation 
- evaluate cache policy ? 
- Train_Test_Split() is not used anywhere ? 
- High level tests for both old codebases + write some result invariants 
- Unit Tests 
- Integration Tests  

- Code Specific Notes: 
    - Remove SingleNameSpace() instances (change to list / dict / python class)
    - Reduce Session File dependency across code base. 
    - Refactor (while True) in synthetic_spiketrain() 
    - Make an enum for categories and conditions
    - incorporate trial interval class stuff inside decoding instead of making it a user facing function 
    - use python3 bc sklearn has some float issue


- scalability 1 neuron vs multiple neurons , different tpyes of input

session file structure 
1: meta
2: 


resources/other notes: 

- style guide: https://google.github.io/styleguide/pyguide.html 

pitt cluster: 

- sbatch , crc-usage, bgfs: storage 

- ssh prg101@h2p.crc.pitt.edu 


Session file usage across code: 

trial interval _ToTimeStamp: 

top level (CalculateDecodingForSingleNeuron): 
| 
    lickDelay -> sessionfile.trials.response, sessionfile.trials.go, sessionfile.trials.starts, sessionfile.trials.go 
    cachedCalculateClusterAccuracy -> 
    sessionfile.trim[clust].trimmed_trials, 
        active_trials = trialsPerDayLoaded[sessionfile.meta.animal][sessionfile.meta.day_of_training]
    |   Sklearn_grid_search_bw -> 
        | getAllconditions 
        | getLogISIs -> 
            | util.getSpikeTimes -> 
            | interval._toTimeStamp -> 
    |   CacheLogISIs -> sessionfile.meta.length_in_trials, sessionfile.meta.fs
        | toTimeStamp -> 
        | getSpikeTimes -> 
    | getAllConditions -> sessionfile.meta.task, 
        | getTrialSet -> sessionfile.trim[clust].trimmed_trials, sessionfile.meta.animal, sessionfile.meta.day_of_training, sessionfile.trials.target, sessionfile.trials.go, sessionfile.trials.response, sessionfile.trials.starts, sessionfile.meta.fs, sessionfile.trials.laser_simulation, sessionfile.meta.first_reversal_trial, sessionfile.meta.length_in_trials
    | calculate_weights -> 
        | getAllConditions: up 
    | K_fold_strat -> sessionfile.trials.target, sessionfile.trials.go
    | cachedTrainDecodingAlgorithm -> sessionfile.meta.length_in_trials 
        | splitbyConditions -> getAllConditions only
    | cachedCalculateAccuracyonFold -> 
        | getAllConditions -> up 
        | cachedPredictTrial ->  not used but passed in 
    generateDateString -> 


exhaustive list: 

getspiketimes, 
totimeStamp, 
getTrialSet: done, 
generateDateString





